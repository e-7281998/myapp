<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- Target : 주업무 -->
	<bean id="calcTarget" class="com.firstzone.aop1.Calculator"></bean>
	
	<!-- Advice : 보조업무 -->
	<bean id="logAdvice" class="com.firstzone.aop1.LoggingAdvice"></bean>
	<bean id="watchAdvice" class="com.firstzone.aop1.StopWatchAdvice"></bean>
	<bean id="myAdvice" class="com.firstzone.aop1.MyAdvice"></bean>

	<!-- advisor = advice + pointcut -->
	<!-- logAdvise 보조업무 advisor로 만들기  -->
	<bean id="advisor1"   class="org.springframework.aop.support.DefaultPointcutAdvisor">
	   <!-- set하는 과정.. -->
	   <property name="advice" ref="logAdvice" />
	<!-- pointcut : 어느 지점에 넣어라 -->
	   <property name="pointcut" >
	      <bean id="aa" class="org.springframework.aop.aspectj.AspectJExpressionPointcut">
	         <property name="expression">
	         <!-- 다음은.. add라는 함수면 다 걸려라. arg, return, 접근제한자 다 상관 없음 -->
	           <value>execution(* add(..))</value>  <!-- 모든 add()함수에 대해 적용 -->
	         </property>
	      </bean>
	   </property>
	</bean>
	  
  	<!-- watchAdvise 보조업무 advisor로 만들기 -->
	<bean id="advisor2" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="advice" ref="watchAdvice" />
		<property name="pointcut">
			<bean id="bb" class="org.springframework.aop.aspectj.AspectJExpressionPointcut">
				<property name="expression">
					<!-- 다음은.. divide 메소드에만 시간 체크 보조업무 추가함 -->
					<!-- <value>execution(* divide(..))</value> --> 
					<!-- 다음은.. 모든 메소드에 시간 체크 보조업무 추가함 -->
					<value>execution(* *(..))</value>
				</property>
			</bean>
		</property>
	</bean>
	
	<bean id="advisor3" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="advice" ref="myAdvice" />
		<property name="pointcut">
			<bean id="cc" class="org.springframework.aop.aspectj.AspectJExpressionPointcut">
				<property name="expression">
 					<value>execution(* *(..))</value>
				</property>
			</bean>
		</property>
	</bean>
	
	
	<!-- Aspect.. advisor+target = -->
	<!-- 메인업무에 보조업무 넣기 -->
	<bean id="proxyCal"  class="org.springframework.aop.framework.ProxyFactoryBean">
	    <property name="target" ref="calcTarget"/>
	    <property name="interceptorNames">
	       <list>
	          <value>advisor1</value>
	          <value>advisor2</value>               
	          <value>advisor3</value>               
	       </list>
	    </property>
	 </bean>
	 
</beans>
